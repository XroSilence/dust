{"version":3,"file":"Quote-aGrZzZs8.js","sources":["../../src/utils/axiosConfig.ts","../../src/pages/quote/ContactFormModal.jsx","../../src/pages/quote/Quote.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://localhost:3001',\r\n    headers: {\r\n        'Content-type': 'application/json'\r\n    }\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    (config) => {\r\n        // Modify the request config if needed\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport const sendQuoteEmail = async (quoteData, contactInfo) => {\r\n    try {\r\n        const response = await axiosInstance.post('/api/quote/send', {\r\n            quote: quoteData,\r\n            contact: contactInfo\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to send quote email: ${error.message}`);\r\n    }\r\n};\r\n\r\nexport const sendContactEmail = async (contactData) => {\r\n    try {\r\n        const response = await axiosInstance.post('/api/contact/send', contactData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to send contact email: ${error.message}`);\r\n    }\r\n};\r\n\r\nexport default axiosInstance;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ContactFormModal = ({ onSubmit, onClose }) => {\r\n  const [contactInfo, setContactInfo] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    message: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    form: ''\r\n  });\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePhone = (phone) => {\r\n    const phoneRegex = /^\\+?[\\d\\s-]{10,}$/;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!contactInfo.name.trim()) newErrors.name = 'Name is required';\r\n    if (!validateEmail(contactInfo.email)) newErrors.email = 'Valid email is required';\r\n    if (!validatePhone(contactInfo.phone)) newErrors.phone = 'Valid phone number is required';\r\n    return newErrors;\r\n  };\r\n\r\n  const handleFormValidation = () => {\r\n    const formErrors = validateForm();\r\n    if (Object.keys(formErrors).length === 0) {\r\n      return true;\r\n    } else {\r\n      setErrors(formErrors);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async () => {\r\n    if (handleFormValidation()) {\r\n      try {\r\n        const response = await axios.post('/api/contact', contactInfo);\r\n\r\n        if (response.status !== 200) throw new Error('Failed to submit contact info');\r\n\r\n        onSubmit(contactInfo);\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setErrors({ form: 'Failed to submit contact info' });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleFormSubmit();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-8 max-w-md w-full relative\">\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-700\"\r\n          type=\"button\"\r\n        >\r\n          <X className=\"w-6 h-6\" />\r\n        </button>\r\n\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Contact Information</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Name *</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={contactInfo.name}\r\n              onChange={(e) => {\r\n                setContactInfo(prev => ({ ...prev, name: e.target.value }));\r\n                setErrors(prev => ({ ...prev, name: '' }));\r\n              }}\r\n              className={`mt-1 w-full p-3 rounded-lg border text-gray-900 ${errors.name ? 'border-red-500' : 'border-gray-300'\r\n                } focus:ring-2 focus:ring-dustup-quote focus:border-dustup-quote`}\r\n              placeholder=\"Enter your name\"\r\n              autoComplete='name'\r\n              id='name'\r\n            />\r\n            {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Email *</label>\r\n            <input\r\n              type=\"email\"\r\n              required\r\n              value={contactInfo.email}\r\n              onChange={(e) => {\r\n                setContactInfo(prev => ({ ...prev, email: e.target.value }));\r\n                setErrors(prev => ({ ...prev, email: '' }));\r\n              }}\r\n              className={`mt-1 w-full p-3 rounded-lg border text-gray-900 ${errors.email ? 'border-red-500' : 'border-gray-300'\r\n                } focus:ring-2 focus:ring-dustup-quote focus:border-dustup-quote`}\r\n              placeholder=\"Enter your email\"\r\n              autoComplete='email'\r\n              id='email'\r\n            />\r\n            {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Phone *</label>\r\n            <input\r\n              type=\"tel\"\r\n              required\r\n              value={contactInfo.phone}\r\n              onChange={(e) => {\r\n                setContactInfo(prev => ({ ...prev, phone: e.target.value }));\r\n                setErrors(prev => ({ ...prev, phone: '' }));\r\n              }}\r\n              className={`mt-1 w-full p-3 rounded-lg border text-gray-900 ${errors.phone ? 'border-red-500' : 'border-gray-300'\r\n                } focus:ring-2 focus:ring-dustup-quote focus:border-dustup-quote`}\r\n              placeholder=\"Enter your phone number\"\r\n              autoComplete='tel'\r\n              id='phone'\r\n            />\r\n            {errors.phone && <p className=\"text-red-500 text-sm mt-1\">{errors.phone}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Company</label>\r\n            <input\r\n              type=\"text\"\r\n              value={contactInfo.company}\r\n              onChange={(e) => setContactInfo(prev => ({ ...prev, company: e.target.value }))}\r\n              className=\"mt-1 w-full p-3 rounded-lg border text-gray-900 border-gray-300 focus:ring-2 focus:ring-dustup-quote focus:border-dustup-quote\"\r\n              placeholder=\"Enter your company name\"\r\n              autoComplete='organization'\r\n              id='company'\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Message</label>\r\n            <textarea\r\n              value={contactInfo.message}\r\n              onChange={(e) => setContactInfo(prev => ({ ...prev, message: e.target.value }))}\r\n              className=\"mt-1 w-full p-3 rounded-lg border text-gray-900 border-gray-300 focus:ring-2 focus:ring-dustup-quote focus:border-dustup-quote\"\r\n              placeholder=\"Enter your message\"\r\n              id='message'\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleFormSubmit}\r\n            className={`w-full px-4 py-2 text-white rounded-lg transition-colors duration-200 \r\n               ${isCaptchaVerified\r\n                ? 'bg-dustup-quote hover:bg-dustup-quote-hover'\r\n                : 'bg-gray-400 cursor-not-allowed'}`}\r\n          >\r\n            Continue to Calculator\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactFormModal;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Calculator, Share2, X, Home } from 'lucide-react';\r\nimport axios from '../../utils/axiosConfig.ts';\r\nimport ContactFormModal from './ContactFormModal';\r\n\r\n   \r\nexport default function Quote() {\r\n  const navigate = useNavigate();\r\n  const [showContactForm, setShowContactForm] = useState(true);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [userContact, setUserContact] = useState(null);\r\n  const [metrics, setMetrics] = useState({\r\n    length: '',\r\n    width: '',\r\n    rafterRuns: '',\r\n    rafterHeight: '',\r\n    specialRequest: '',\r\n    srCost: '',\r\n    customDeliveryCost: ''\r\n  });\r\n\r\n  const [conditions, setConditions] = useState({\r\n    noLiftNeeded: false,\r\n    poorLiftAccess: false,\r\n    duringOperation: true,\r\n    afterHours: false,\r\n    standardDelivery: true,\r\n    customDelivery: false,\r\n    selfDelivery: false\r\n  });\r\n\r\n  const onCaptchaChange = (value) => {\r\n    if (!value || value.length < 5) {\r\n      console.error('Invalid captcha value');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleContactSubmit = (contactInfo) => {\r\n    console.log('Contact form submitted:', contactInfo); // Debug log\r\n    setUserContact(contactInfo);\r\n    setShowContactForm(false);\r\n  };\r\n\r\n  const QuoteCalculator = ({ metrics, setMetrics, conditions, setConditions, contactInfo }) => {\r\n    const calculateQuote = () => {\r\n      const length = parseFloat(metrics.length);\r\n      const width = parseFloat(metrics.width);\r\n      const rafterHeight = parseFloat(metrics.rafterHeight);\r\n\r\n      if (isNaN(length) || isNaN(width) || isNaN(rafterHeight)) {\r\n        return {\r\n          estimatedDays: 0,\r\n          laborCost: 0,\r\n          liftRentalCost: 0,\r\n          deliveryCost: 0,\r\n          total: 0,\r\n          cubicArea: 0\r\n        };\r\n      }\r\n\r\n      const baseArea = length * width;\r\n      const cubicArea = baseArea * rafterHeight;\r\n\r\n      let productionRate = conditions.duringOperation ? 400 : 540;\r\n      let estimatedDays = Math.ceil(baseArea / productionRate);\r\n\r\n      let laborCost = estimatedDays * 8 * 120;\r\n      let liftRentalCost = 0;\r\n      let deliveryCost = 0;\r\n\r\n      if (!conditions.noLiftNeeded) {\r\n        if (estimatedDays <= 5) {\r\n          liftRentalCost = 120 * estimatedDays;\r\n        } else if (estimatedDays <= 20) {\r\n          liftRentalCost = 340 * Math.ceil(estimatedDays / 5);\r\n        } else {\r\n          liftRentalCost = 950 * Math.ceil(estimatedDays / 20);\r\n        }\r\n\r\n        if (conditions.standardDelivery) {\r\n          deliveryCost = 150; // Standard delivery cost\r\n        } else if (conditions.customDelivery) {\r\n          deliveryCost = parseFloat(metrics.customDeliveryCost) || 0;\r\n        }\r\n      }\r\n\r\n      if (conditions.poorLiftAccess) laborCost *= 1.15;\r\n      if (conditions.afterHours) laborCost *= 1.25;\r\n\r\n      const total = laborCost + liftRentalCost + deliveryCost;\r\n\r\n      return {\r\n        estimatedDays,\r\n        laborCost,\r\n        liftRentalCost,\r\n        deliveryCost,\r\n        total,\r\n        cubicArea\r\n      };\r\n    };\r\n\r\n    const [exportStatus, setExportStatus] = useState({ type: '', message: '' });\r\n\r\n    const handleSubmitQuote = async () => {\r\n      try {\r\n        const response = await axios.post('/quote', {\r\n          contactInfo,\r\n          quoteData: calculateQuote(),\r\n        });\r\n\r\n        if (response.status !== 200) throw new Error('Failed to submit quote');\r\n\r\n        setExportStatus({ type: 'success', message: 'Quote submitted successfully!' });\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setExportStatus({ type: 'error', message: 'Failed to submit quote' });\r\n      }\r\n    };\r\n\r\n    const quote = calculateQuote();\r\n\r\n    return (\r\n      <div className=\"space-y-6 bg-white text-gray-900 p-8 rounded-lg shadow-lg\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Calculator className=\"w-6 h-6 text-blue-500\" />\r\n            <h1 className=\"text-xl font-bold\">Quote Calculator</h1>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-6\">\r\n          <div className=\"space-y-4\">\r\n            <h2 className=\"font-semibold\">Facility Metrics</h2>\r\n           \r\n            <div className=\"space-y-2\">\r\n              <label className=\"block text-sm\">\r\n                Facility Length (ft)\r\n                <input\r\n                  type=\"number\"\r\n                  value={metrics.length}\r\n                  onChange={(e) => setMetrics(prev => ({ ...prev, length: e.target.value }))}\r\n                  className=\"w-full mt-1 p-2 border rounded\"\r\n                />\r\n              </label>\r\n\r\n              <label className=\"block text-sm\">\r\n                Facility Width (ft)\r\n                <input\r\n                  type=\"number\"\r\n                  value={metrics.width}\r\n                  onChange={(e) => setMetrics(prev => ({ ...prev, width: e.target.value }))}\r\n                  className=\"w-full mt-1 p-2 border rounded\"\r\n                />\r\n              </label>\r\n\r\n              <label className=\"block text-sm\">\r\n                Rafter Height (ft)\r\n                <input\r\n                  type=\"number\"\r\n                  value={metrics.rafterHeight}\r\n                  onChange={(e) => setMetrics(prev => ({ ...prev, rafterHeight: e.target.value }))}\r\n                  className=\"w-full mt-1 p-2 border rounded\"\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <h2 className=\"font-semibold\">Conditions</h2>\r\n           \r\n            <div className=\"space-y-2\">\r\n              <label className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={conditions.noLiftNeeded}\r\n                  onChange={() => setConditions(prev => ({ ...prev, noLiftNeeded: !prev.noLiftNeeded }))}\r\n                  className=\"rounded border-gray-300\"\r\n                />\r\n                <span className=\"text-sm\">No Lift Required</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={conditions.poorLiftAccess}\r\n                  onChange={() => setConditions(prev => ({ ...prev, poorLiftAccess: !prev.poorLiftAccess }))}\r\n                  className=\"rounded border-gray-300\"\r\n                />\r\n                <span className=\"text-sm\">Poor Lift Access</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={conditions.duringOperation}\r\n                  onChange={() => {\r\n                    setConditions(prev => ({\r\n                      ...prev,\r\n                      duringOperation: !prev.duringOperation,\r\n                      afterHours: prev.duringOperation\r\n                    }));\r\n                  }}\r\n                  className=\"rounded border-gray-300\"\r\n                />\r\n                <span className=\"text-sm\">During Operation Hours</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={conditions.afterHours}\r\n                  onChange={() => {\r\n                    setConditions(prev => ({\r\n                      ...prev,\r\n                      afterHours: !prev.afterHours,\r\n                      duringOperation: prev.afterHours\r\n                    }));\r\n                  }}\r\n                  className=\"rounded border-gray-300\"\r\n                />\r\n                <span className=\"text-sm\">After Hours</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-8 p-6 bg-gray-50 rounded-lg\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Quote Summary</h2>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n              <div>\r\n                <p>Total Area: {quote.cubicArea.toFixed(0)} cubic ft</p>\r\n                <p>Estimated Duration: {quote.estimatedDays} days</p>\r\n                <p>Labor Cost: ${quote.laborCost.toFixed(2)}</p>\r\n              </div>\r\n              <div>\r\n                <p>Lift Rental Cost: ${quote.liftRentalCost.toFixed(2)}</p>\r\n                <p>Delivery Cost: ${quote.deliveryCost.toFixed(2)}</p>\r\n                <p className=\"text-lg font-bold text-green-600 mt-2\">\r\n                  Total Quote: ${quote.total.toFixed(2)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmitQuote}>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"flex items-center gap-2 px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors duration-200\"\r\n          >\r\n            <Share2 className=\"w-5 h-5\" />\r\n            Submit Quote\r\n          </button>\r\n        </form>\r\n        {exportStatus.message && (\r\n          <p className={`mt-4 ${exportStatus.type === 'success' ? 'text-green-600' : 'text-red-600'}`}>\r\n            {exportStatus.message}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-slate-900 py-8\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        {showContactForm && (\r\n          <ContactFormModal\r\n            onSubmit={handleContactSubmit}\r\n            onClose={() => navigate('/')}\r\n          />\r\n        )}\r\n     \r\n        {!showContactForm && !showSuccess && userContact && (\r\n          <>\r\n            <QuoteCalculator\r\n              metrics={metrics}\r\n              setMetrics={setMetrics}\r\n              conditions={conditions}\r\n              setConditions={setConditions}\r\n              contactInfo={userContact}\r\n            />\r\n            <div className=\"mt-4 text-center\">\r\n              <p className=\"text-gray-600 mb-6\">\r\n                Great, we will review the details and be in touch soon!\r\n              </p>\r\n              <button\r\n                onClick={() => setShowSuccess(false)}\r\n                className=\"bg-dustup-quote text-primary-green font-semibold py-2 px-6 rounded-lg hover:bg-dustup-quote-hover transition-colors duration-200\"\r\n                type=\"button\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["axiosInstance","axios","config","error","ContactFormModal","onSubmit","onClose","contactInfo","setContactInfo","useState","errors","setErrors","validateEmail","email","validatePhone","phone","validateForm","newErrors","handleFormValidation","formErrors","handleFormSubmit","handleSubmit","e","jsxs","jsx","prev","Quote","navigate","useNavigate","showContactForm","setShowContactForm","showSuccess","setShowSuccess","userContact","setUserContact","metrics","setMetrics","conditions","setConditions","handleContactSubmit","QuoteCalculator","calculateQuote","length","width","rafterHeight","baseArea","cubicArea","productionRate","estimatedDays","laborCost","liftRentalCost","deliveryCost","total","exportStatus","setExportStatus","handleSubmitQuote","quote","Calculator","Share2","Fragment"],"mappings":"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"}